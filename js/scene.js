const TILEMAP_CONFIG = {
    TILE_MAP_PATH: 'assets/images/environment/roguelikeSheet_transparent.png',
    TILE_SIZE: 16,
    TILE_ROWS: 57,
    TILE_COLUMNS: 31,
    TILE_PADDING: 1,
    SCALE: 2, // Increased scale for larger tiles
    DEFAULT_TILE: 6 // Default empty tile index
};
  
class Scene {
  constructor(width, height) {
    this.width = width;
    this.height = height;
    this.layers = [];
    this.tilemapSprites = new Map();
    this.viewport = {
      x: 0,
      y: 0,
      width: 0,
      height: 0
    };
  }
  
    // Load tilemap sprite sheet
    async loadTilemap(imagePath) {
        return new Promise((resolve, reject) => {
          const img = new Image();
          img.onload = () => {
            const canvas = document.createElement('canvas');
            canvas.width = TILEMAP_CONFIG.TILE_SIZE;
            canvas.height = TILEMAP_CONFIG.TILE_SIZE;
            const ctx = canvas.getContext('2d');
            
            // Calculate total tiles in tilemap
            const totalRows = Math.floor(img.height / (TILEMAP_CONFIG.TILE_SIZE + TILEMAP_CONFIG.TILE_PADDING));
            const totalCols = Math.floor(img.width / (TILEMAP_CONFIG.TILE_SIZE + TILEMAP_CONFIG.TILE_PADDING));
            
            // Slice tilemap into individual sprites
            for (let y = 0; y < totalRows; y++) {
              for (let x = 0; x < totalCols; x++) {
                const tileIndex = y * TILEMAP_CONFIG.TILE_ROWS + x;
                
                ctx.clearRect(0, 0, TILEMAP_CONFIG.TILE_SIZE, TILEMAP_CONFIG.TILE_SIZE);
                
                // Calculate source coordinates with padding
                const sourceX = x * (TILEMAP_CONFIG.TILE_SIZE + TILEMAP_CONFIG.TILE_PADDING);
                const sourceY = y * (TILEMAP_CONFIG.TILE_SIZE + TILEMAP_CONFIG.TILE_PADDING);
                
                ctx.drawImage(img, 
                  sourceX, sourceY, 
                  TILEMAP_CONFIG.TILE_SIZE, TILEMAP_CONFIG.TILE_SIZE,
                  0, 0, 
                  TILEMAP_CONFIG.TILE_SIZE, TILEMAP_CONFIG.TILE_SIZE
                );
                
                const tileCanvas = document.createElement('canvas');
                tileCanvas.width = TILEMAP_CONFIG.TILE_SIZE;
                tileCanvas.height = TILEMAP_CONFIG.TILE_SIZE;
                tileCanvas.getContext('2d').drawImage(canvas, 0, 0);
                
                this.tilemapSprites.set(tileIndex, tileCanvas);
              }
            }
            resolve();
          };
          img.onerror = reject;
          img.src = imagePath;
        });
    }

    loadFromData(sceneData) {
      // Reset dimensions if needed
      if (sceneData.width !== this.width || sceneData.height !== this.height) {
        this.width = sceneData.width;
        this.height = sceneData.height;
      }
      
      // Handle multi-layer format
      if (sceneData.layers) {
        this.layers = sceneData.layers.map(layer => ({
          name: layer.name,
          tiles: layer.tiles.map(row => [...row]) // Deep copy tiles array
        }));
      } else {
        // Single layer format - convert to layers format
        this.layers = [{
          name: 'Layer 1',
          tiles: sceneData.tiles.map(row => [...row])
        }];
      }
    }

    async loadFromFile(jsonPath) {
      try {
        const response = await fetch(jsonPath);
        const sceneData = await response.json();
        this.loadFromData(sceneData);
      } catch (err) {
        console.error('Error loading scene file:', err);
        throw err;
      }
    }

    setViewport(x, y, width, height) {
      this.viewport = { x, y, width, height };
    }
  
    // Update render method to use tilemap sprites
    render(ctx) {
      // Disable image smoothing for pixel-perfect rendering
      ctx.imageSmoothingEnabled = false;
      ctx.webkitImageSmoothingEnabled = false;
      ctx.mozImageSmoothingEnabled = false;
      ctx.msImageSmoothingEnabled = false;
  
      const scaledTileSize = TILEMAP_CONFIG.TILE_SIZE * TILEMAP_CONFIG.SCALE;
  
      // Draw each layer from bottom to top
      this.layers.forEach(layer => {
        for (let y = 0; y < this.height; y++) {
          for (let x = 0; x < this.width; x++) {
            const tileType = layer.tiles[y][x];
            if (tileType === TILEMAP_CONFIG.DEFAULT_TILE) continue; // Skip empty tiles
            
            const tileSprite = this.tilemapSprites.get(tileType);
            if (tileSprite) {
              const screenX = x * scaledTileSize;
              const screenY = y * scaledTileSize;
              
              // Only render tiles that are visible in the game area
              if (screenX >= -scaledTileSize && 
                  screenX <= ctx.canvas.width && 
                  screenY >= -scaledTileSize && 
                  screenY <= ctx.canvas.height) {
                ctx.drawImage(tileSprite, 
                  screenX, screenY,
                  scaledTileSize, scaledTileSize
                );
              }
            }
          }
        }
      });
    }
  }
  
  // Example scene data format
  const exampleScene = 
  {
    "width": 32,
    "height": 32,
    "layers": [
      {
        "name": "Layer 1",
        "tiles": [
            [  5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,   2,   3,   3,   3,   3,   4,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,  59,   1,   1,   1,   1,  61,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,  59,   1,   1,   1,   1,  61,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,  59,   1,   1,   1,   0,  61,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,  59,   0,   0,   0,   0,  61,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,  59,   0,   0,   0,   0, 114,   3,   3,   3,   3,   3,   3,   3,   3,   3,   4,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,  59,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  61,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,  59,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  61,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,  59,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  61,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,  59,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  61,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5, 116, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 118,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5],
        [  5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5]
        ]
      },
  {
        "name": "Layer 2",
        "tiles": [
            [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 520, 521, 522, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286,  19, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521,  63,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [ 63,  63,  63,  63,  63,  63,  63,  63,  63,  63,  63,  63,  63,  63,  63,  63,  63,  63,  63,  63,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635,  63,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286],
        [286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 577,  63, 579, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286]
        ]
      },
  {
        "name": "Layer 3",
        "tiles": [
            [588,   6,   6, 541,   6,   6,   6,   6,   6,   6, 542, 588,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [645,   6,   6,   6,   6,   6,   6, 537,   6,   6,   6, 645,   6,   6,   6,   6,   6,   6,   6,   6, 588,   6,   6,   6,   6,   6,   6,   6,   6,   6, 541,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6, 588,   6,   6, 542,   6, 645,   6,   6,   6,   6,   6,   6,   6,   6, 537,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6, 541,   6,   6,   6,   6,   6, 645,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6, 537,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6, 588,   6],
        [541,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6, 645,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6, 541,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6, 542,   6],
        [  6, 542,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6, 588,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6, 645,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [ 20,   6,   6,   6, 537,   6,   6,   6,   6,   6,   6,   6,   6,   6, 588,   6,   6,   6,  21,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6, 645,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6, 588,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6, 645,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6, 588,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [542,   6,   6,   6,   6,   6,   6,   6, 541,   6,   6,   6,   6,   6,   6,   6,   6, 645,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6, 537,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6, 542,   6,   6, 872, 873, 873, 874,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6, 541,   6,   6,   6,   6,   6, 588,   6,   6,   6,   6, 872, 873, 873, 874,  18,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6, 645,   6,   6,   6,   6, 869, 868, 868, 871,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6, 541,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6, 588,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6, 588,   6],
        [  6,   6, 645,   6,   6,   6,   6,   6,   6, 541,   6,   6,   6,   6, 588,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6, 645,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6, 645,   6, 537,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6]
        ]
      },
  {
        "name": "Layer 4",
        "tiles": [
            [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6, 1217, 1218,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6, 1217, 1391, 1279, 1218,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6, 1274, 1654, 1279, 1275,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6, 1333,   6,   6, 1334,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6, 558,   6,   6, 558,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6, 484, 485,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6],
        [  6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6]
        ]
      }
    ]
  };
  
  // Scene manager for handling multiple scenes
  class SceneManager {
    constructor() {
      this.scenes = new Map();
      this.currentScene = null;
    }
  
    async createScene(id, width, height) {
      const scene = new Scene(width, height);
      this.scenes.set(id, scene);
      return scene;
    }
  
    loadScene(id) {
      this.currentScene = this.scenes.get(id);
      return this.currentScene;
    }
  
    getCurrentScene() {
      return this.currentScene;
    }
  }
  
  // Export for use in other files
  const sceneManager = new SceneManager();